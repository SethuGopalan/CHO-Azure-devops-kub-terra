trigger:
- master

pool:
  vmImage: ubuntu-latest

# variables:
#   terraformConfigurationDirectory: 'configuration/iaac/azure/kubernetes'

steps:
- script: echo 'K8S Terraform Azure!'
  displayName: 'Run a one-line script'

- task: DownloadSecureFile@1
  name: publickey
  inputs:
    secureFile: 'azure_rsa.pub'
- task: TerraformCLI@1
  inputs:
    command: 'init'
    workingDirectory: '$(System.DefaultWorkingDirectory)'
    commandOptions: '-backend-config=client_id=$(client_id) -backend-config=client_secret=$(client_secret) -backend-config=ssh_public_key=$(publickey.secureFilePath)'
    backendType: 'azurerm'
    backendServiceArm: 'Azure-Kubernets-Pipeline-connection'
    backendAzureRmResourceGroupName: 'terraform-backend-rg'
    backendAzureRmStorageAccountName: 'storageaccountsethu7797'
    backendAzureRmContainerName: 'storageaccount7797container'
    backendAzureRmKey: 'kubernets-dev.tfstate'
    allowTelemetryCollection: true
- task: TerraformCLI@1
  inputs:
    command: 'validate'
    allowTelemetryCollection: true
- task: TerraformCLI@1
  inputs:
    command: 'plan'
    
    workingDirectory: '$(System.DefaultWorkingDirectory)'
    environmentServiceName: 'Azure-Kubernets-Pipeline-connection'
    allowTelemetryCollection: true
    publishPlanResults: 'backend-state-plan'
- task: TerraformCLI@1
  inputs:
    command: 'plan'
    
    workingDirectory: '$(terraformConfigurationDirectory)/configuration/iaac/azure/kubernetes'
    environmentServiceName: 'Azure-Kubernets-Pipeline-connection'
    allowTelemetryCollection: true
    publishPlanResults: 'backend-state-plan'

    
